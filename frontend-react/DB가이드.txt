1. USERLIST

- 사용자 정보 테이블

@생성 (H2 DB 기준)

CREATE TABLE USERLIST (
   userId   INT   NOT NULL AUTO_INCREMENT,
   userEmail VARCHAR(100)   NOT NULL,
   userPw   VARCHAR(100)   NOT NULL,
   userName   VARCHAR(20)   NOT NULL,
   userNickname   VARCHAR(20)   NOT NULL,
   userProfile   VARCHAR(255),
   userRegDate VARCHAR NOT NULL  DEFAULT TO_CHAR(CURRENT_TIMESTAMP, 'yyyy-MM-dd HH:mm:ss'),
   userModDate   VARCHAR,
   userPhone   VARCHAR(30)   NOT NULL,
   userPremium   INTEGER   DEFAULT 0,
   adminAuth   INTEGER   DEFAULT 0,
   userResign   INTEGER   DEFAULT 0,
   PRIMARY KEY (userId)
);

* userRegDate / userModDate 생성, 수정시  
DEFAULT TO_CHAR(CURRENT_TIMESTAMP, 'yyyy-MM-dd HH:mm:ss') 포맷 처리

+ 스프링부트에서 VO에 자료형 DATE말고 String쓸것 (깔끔하게 나옴)


2. LEDGER

- 접속중인 사용자의 가계부 리스트 조회

CREATE TABLE LEDGER (
  ledgerId INTEGER NOT NULL AUTO_INCREMENT,
  userId INTEGER NOT NULL,
  ledgerName VARCHAR(100) NOT NULL,
  ledgerRegDate DATETIME NOT NULL DEFAULT TO_CHAR(CURRENT_TIMESTAMP, 'yyyy-MM-dd HH:mm:ss'),
  ledgerModDate DATETIME NULL,
  ledgerMemo VARCHAR(200) NULL
);

ALTER TABLE `LEDGER` ADD CONSTRAINT `PK_LEDGER` PRIMARY KEY (
	`ledgerId`
);

3. SPENDING

CREATE TABLE `SPENDING` (
	`spendingId`	INTEGER	NOT NULL AUTO_INCREMENT,
	`userId`	INTEGER	NOT NULL,
	`spendingTime`	DATETIME	NOT NULL	DEFAULT (CURRENT_TIMESTAMP),
	`spendingAmount`	INTEGER	NOT NULL,
	`spendingWhy`	VARCHAR(100)	NULL,
	`spendingCategory1`	INTEGER	NOT NULL,
	`spendingCategory2`	INTEGER	NULL,
	`spendingMethodId`	INTEGER	NOT NULL,
	`spendingMemo`	VARCHAR(100)	NULL
);

ALTER TABLE `SPENDING` ADD CONSTRAINT `PK_SPENDING` PRIMARY KEY (
	`spendingId`
);

@@ EXAMPLE

INSERT INTO SPENDING (ledgerId, categorySpendingId, spendingList, spendingAmount, spendingWhy, spendingMemo)
VALUES (16,1,'현금',50000,'축의금',null);

4. INCOME

CREATE TABLE `INCOMING` (
	`incomingId`	INTEGER	NOT NULL AUTO_INCREMENT,
	`userId`	INTEGER	NOT NULL,
	`incomingTime`	DATETIME	NOT NULL	DEFAULT (CURRENT_TIMESTAMP),
	`incomingAmount`	INTEGER	NOT NULL,
	`incomingWhy`	VARCHAR(100)	NULL,
	`incomingCategory1`	INTEGER	NOT NULL,
	`incomingCategory2`	INTEGER	NULL,
	`incomingMethodId`	INTEGER	NOT NULL,
	`incomingMemo`	VARCHAR(100)	NULL
);

ALTER TABLE `INCOMING` ADD CONSTRAINT `PK_INCOMING` PRIMARY KEY (
	`incomingId`
);



@@EXAMPLE

INSERT INTO INCOME (ledgerId, categoryIncomeId, incomeList, incomeAmount, incomeWhy, incomeMemo)
VALUES (16,1,'통장',200000,'알바비','주말 카페알바');

5. SPENDING_METHOD

CREATE TABLE `SPENDING_METHOD` (
	`spendingMethodId`	INTEGER	NOT NULL AUTO_INCREMENT,
	`spendingMethod`	VARCHAR(30)	NOT NULL,
	`userId`	INTEGER	NOT NULL
);

ALTER TABLE `SPENDING_METHOD` ADD CONSTRAINT `PK_SPENDING_METHOD` PRIMARY KEY (
	`spendingMethodId`
);

6.INCOMING_METHOD

CREATE TABLE `INCOMING_METHOD` (
	`incomingMethodId`	INTEGER	NOT NULL AUTO_INCREMENT,
	`incomingMethod`	VARCHAR(30)	NOT NULL,
	`userId`	INTEGER	NOT NULL
);

ALTER TABLE `INCOMING_METHOD` ADD CONSTRAINT `PK_INCOMING_METHOD` PRIMARY KEY (
	`incomingMethodId`
);




///

UPDATE

UPDATE 테이블명 SET 필드명='변경할값' WHERE 필드명=해당값;

INSERT

INSERT INTO 테이블 이름 (열1, 열2, ...) 
VALUE (값1, 값2 , ….)

